name: Windows builds

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: C++${{matrix.std}}, ${{matrix.build_type}}
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    strategy:
      matrix:
        build_type: [ Debug, Release ]
        std: [ 14 ]

    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v2

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2

      # Install dependencies
      - name: Install boost
        uses: MarkusJx/install-boost@v2.4.4
        id: install-boost
        with:
          boost_version: 1.78.0
          platform_version: 2022

      - name: Configure cmake
        working-directory: ${{runner.workspace}}
        env:
          BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}
        #  CXX: ${{matrix.cxx}}
        #  CXXFLAGS: ${{matrix.cxxflags}}
        # Note: $GITHUB_WORKSPACE is distinct from ${{runner.workspace}}.
        #       This is important
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        shell: cmd
        run: |
          cmake -B${{github.workspace}}/build -H%GITHUB_WORKSPACE% -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DCMAKE_CXX_STANDARD=${{matrix.std}} -DCMAKE_CXX_EXTENSIONS=OFF

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}}

      - name: Test
        working-directory: ${{github.workspace}}/build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C ${{matrix.build_type}}
